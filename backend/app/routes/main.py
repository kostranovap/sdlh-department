from flask import Blueprint, render_template, request, redirect, url_for, flash, jsonify
from flask_login import login_required, current_user
from sqlalchemy import or_
from app import db
from app.models import User, Article, Service, Application, News, Program
from app.forms import ServiceApplicationForm, NewsletterForm

# –°–æ–∑–¥–∞–Ω–∏–µ blueprint –¥–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
main = Blueprint('main', __name__)

@main.route('/')
def index():
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"""
    # –ü–æ–ª—É—á–∞–µ–º 3 —Å–ª—É—á–∞–π–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏
    from sqlalchemy import func
    latest_news = News.query.filter_by(is_published=True).order_by(
        func.random()
    ).limit(3).all()
    
    # –ü–æ–ª—É—á–∞–µ–º –≤–∞–∂–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏
    important_news = News.query.filter_by(
        is_published=True, 
        is_important=True
    ).order_by(News.created_at.desc()).limit(3).all()
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —É—Å–ª—É–≥–∏
    popular_services = Service.query.filter_by(is_active=True).limit(6).all()
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ª–µ—Å–æ–≤
    forest_stats = {
        'total_area': '2.3 –º–ª–Ω',
        'protected_areas': '156',
        'reforested': '45.2 —Ç—ã—Å',
        'fires_prevented': '98.5%'
    }
    
    return render_template('pages/index.html',
                         latest_news=latest_news,
                         important_news=important_news,
                         popular_services=popular_services,
                         forest_stats=forest_stats)

@main.route('/about')
def about():
    """–û –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–µ"""
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—å–∏ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã "–û –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–µ"
    articles = Article.query.filter_by(page='about', is_published=True).all()
    
    # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –¥–ª—è timeline (–≤–∞–∂–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è)
    history_news = News.query.filter_by(
        is_published=True, 
        is_important=True
    ).order_by(News.created_at.asc()).limit(10).all()
    
    return render_template('pages/about.html', articles=articles, history_news=history_news)

@main.route('/info', methods=['GET', 'POST'])
def info():
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è - —É—Å–ª—É–≥–∏ –∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã"""
    form = ServiceApplicationForm()
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —É—Å–ª—É–≥–∏ –∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã
    services_list = Service.query.filter_by(is_active=True).all()
    programs_list = Program.query.filter_by(is_active=True).all()
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Å–ª–æ–≤–∞—Ä–∏ –¥–ª—è JSON
    services_dict = [service.to_dict() for service in services_list]
    programs_dict = [program.to_dict() for program in programs_list]
    
    # –ó–∞–ø–æ–ª–Ω—è–µ–º –≤—ã–±–æ—Ä –≤ —Ñ–æ—Ä–º–µ (—É—Å–ª—É–≥–∏ + –ø—Ä–æ–≥—Ä–∞–º–º—ã)
    choices = []
    for service in services_list:
        choices.append((f"service_{service.id}", f"–£—Å–ª—É–≥–∞: {service.name}"))
    for program in programs_list:
        choices.append((f"program_{program.id}", f"–ü—Ä–æ–≥—Ä–∞–º–º–∞: {program.name}"))
    
    form.service_id.choices = choices
    
    if form.validate_on_submit():
        if not current_user.is_authenticated:
            flash('–î–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–ª–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É', 'warning')
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–∞ —Ç—É –∂–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –∏ JS –æ—Ç–∫—Ä–æ–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            return render_template('pages/info.html', 
                                 services=services_dict,
                                 programs=programs_dict,
                                 form=form,
                                 show_login_modal=True)
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∑–∞—è–≤–∫–∏
        selection = form.service_id.data
        if selection.startswith('service_'):
            application_type = 'service'
            service_id = int(selection.replace('service_', ''))
            program_id = None
        else:
            application_type = 'program'
            program_id = int(selection.replace('program_', ''))
            service_id = None
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–ª–µ–Ω–∏—è
        application = Application(
            application_type=application_type,
            service_id=service_id,
            program_id=program_id,
            user_id=current_user.id,
            full_name=form.full_name.data,
            email=form.email.data,
            phone=form.phone.data,
            organization=form.organization.data,
            description=form.description.data,
            documents=form.documents.data,
            status='new'
        )
        
        try:
            db.session.add(application)
            db.session.commit()
            flash('–ó–∞—è–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∞–Ω–æ! –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç—Å–ª–µ–¥–∏—Ç—å –µ–≥–æ —Å—Ç–∞—Ç—É—Å –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ.', 'success')
            return redirect(url_for('auth.profile'))
        except Exception as e:
            db.session.rollback()
            flash('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∞—á–µ –∑–∞—è–≤–ª–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.', 'error')
    
    return render_template('pages/info.html', 
                         services=services_dict,
                         programs=programs_dict,
                         form=form)

@main.route('/monitoring')
def monitoring():
    """–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ª–µ—Å–æ–≤"""
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    monitoring_data = {
        'fire_danger_class': 'II',
        'temperature': '+18¬∞C',
        'humidity': '65%',
        'wind_speed': '12 –º/—Å',
        'last_update': '03.01.2025 14:30',
        'active_fires': '2',
        'controlled_area': '1.2 —Ç—ã—Å. –≥–∞',
        'extinguished_fires': '1',
        'healthy_forests': '89.3%',
        'damaged_areas': '7.2%',
        'recovering_areas': '3.5%'
    }
    
    articles = Article.query.filter_by(page='monitoring', is_published=True).all()
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –≤–∞–∂–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –¥–ª—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 5)
    alert_news = News.query.filter_by(
        is_published=True, 
        is_important=True
    ).order_by(News.created_at.desc()).limit(5).all()
    
    return render_template('pages/monitoring.html', 
                         articles=articles,
                         alert_news=alert_news,
                         **monitoring_data)

@main.route('/news')
def news():
    """–°–ø–∏—Å–æ–∫ –Ω–æ–≤–æ—Å—Ç–µ–π"""
    page = request.args.get('page', 1, type=int)
    sort = request.args.get('sort', 'new')  # 'new' - —Å–Ω–∞—á–∞–ª–∞ –Ω–æ–≤—ã–µ, 'old' - —Å–Ω–∞—á–∞–ª–∞ —Å—Ç–∞—Ä—ã–µ
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ—Ä—è–¥–æ–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
    if sort == 'old':
        order = News.created_at.asc()
    else:  # sort == 'new' –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        order = News.created_at.desc()
    
    news_items = News.query.filter_by(is_published=True).order_by(
        News.is_important.desc(), order
    ).paginate(page=page, per_page=6, error_out=False)
    
    return render_template('news.html', news_items=news_items, current_sort=sort)

@main.route('/news/<int:id>')
def news_detail(id):
    """–ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç–¥–µ–ª—å–Ω–æ–π –Ω–æ–≤–æ—Å—Ç–∏"""
    news_item = News.query.filter_by(id=id, is_published=True).first_or_404()
    
    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
    news_item.view_count += 1
    db.session.commit()
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Ö–æ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 3)
    related_news = News.query.filter(
        News.id != id,
        News.is_published == True
    ).order_by(News.created_at.desc()).limit(3).all()
    
    return render_template('news_detail.html', 
                         news_item=news_item, 
                         related_news=related_news)

@main.route('/sitemap')
def sitemap():
    """–ö–∞—Ä—Ç–∞ —Å–∞–π—Ç–∞"""
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∞–π—Ç–∞
    stats = {
        'total_pages': '5',
        'total_news': News.query.filter_by(is_published=True).count(),
        'last_update': '03.01.2025',
        'total_services': Service.query.filter_by(is_active=True).count()
    }
    
    return render_template('pages/sitemap.html', **stats)

@main.route('/newsletter', methods=['POST'])
def newsletter():
    """–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –Ω–æ–≤–æ—Å—Ç–∏"""
    form = NewsletterForm()
    
    if form.validate_on_submit():
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø–æ–¥–ø–∏—Å–∫–∏
        flash('–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –Ω–æ–≤–æ—Å—Ç–∏!', 'success')
    else:
        flash('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–ø–∏—Å–∫–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.', 'error')
    
    return redirect(request.referrer or url_for('main.index'))

# API –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è AJAX –∑–∞–ø—Ä–æ—Å–æ–≤
@main.route('/api/search')
def api_search():
    """API –ø–æ–∏—Å–∫–∞ –¥–ª—è –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –º–µ–Ω—é"""
    query = request.args.get('q', '').strip()
    if len(query) < 2:
        return jsonify([])
    
    results = []
    
    # –ü–æ–∏—Å–∫ –≤ –Ω–æ–≤–æ—Å—Ç—è—Ö
    news_results = News.query.filter(
        News.title.contains(query),
        News.is_published == True
    ).limit(5).all()
    
    for news in news_results:
        results.append({
            'title': news.title,
            'type': '–ù–æ–≤–æ—Å—Ç—å',
            'url': url_for('main.news_detail', id=news.id),
            'icon': 'üì∞'
        })
    
    # –ü–æ–∏—Å–∫ –≤ —É—Å–ª—É–≥–∞—Ö  
    service_results = Service.query.filter(
        Service.name.contains(query),
        Service.is_active == True
    ).limit(5).all()
    
    for service in service_results:
        results.append({
            'title': service.name,
            'type': '–£—Å–ª—É–≥–∞',
            'url': url_for('main.info'),
            'icon': 'üìã'
        })
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–∞–π—Ç–∞
    pages = [
        {'title': '–û –¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–µ', 'url': url_for('main.about'), 'icon': 'üè¢'},
        {'title': '–ü–æ–¥–∞—á–∞ –∑–∞—è–≤–ª–µ–Ω–∏–π', 'url': url_for('main.info'), 'icon': 'üìù'},
        {'title': '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ª–µ—Å–æ–≤', 'url': url_for('main.monitoring'), 'icon': 'üå≤'},
        {'title': '–ù–æ–≤–æ—Å—Ç–∏', 'url': url_for('main.news'), 'icon': 'üì∞'},
        {'title': '–ö–∞—Ä—Ç–∞ —Å–∞–π—Ç–∞', 'url': url_for('main.sitemap'), 'icon': 'üó∫Ô∏è'},
    ]
    
    for page in pages:
        if query.lower() in page['title'].lower():
            results.append({
                'title': page['title'],
                'type': '–°—Ç—Ä–∞–Ω–∏—Ü–∞',
                'url': page['url'],
                'icon': page['icon']
            })
    
    return jsonify(results[:8])

@main.route('/api/stats')
def api_stats():
    """API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    stats = {
        'total_users': User.query.count(),
        'total_applications': Application.query.count(),
        'total_news': News.query.filter_by(is_published=True).count(),
        'total_services': Service.query.filter_by(is_active=True).count()
    }
    return jsonify(stats)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–∫–∏ 404
@main.app_errorhandler(404)
def not_found_error(error):
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—à–∏–±–∫–∏ 404"""
    return render_template('pages/404.html'), 404