---
description: 
globs: 
alwaysApply: true
---
# Правило для проекта: Разработка сайта Департамента лесного хозяйства (СДЛХ)

## Описание проекта
Проект представляет собой разработку сайта Департамента лесного хозяйства (СДЛХ) — статического, адаптивного веб-ресурса для информирования общественности, предоставления базовых услуг, мониторинга лесных ресурсов и экологического просвещения. Разработка выполняется студентом [ваше имя или группа] в учебном заведении [название института] с использованием HTML, CSS и минимального JavaScript (без фреймворков и CMS). Проект соответствует ГОСТ 34.602—2020 и требованиям доступности для слабовидящих по ГОСТ Р 52872-2012 и WCAG 2.1 (уровень AA).

## Ключевые характеристики системы
| Характеристика         | Описание                                      |
|------------------------|-----------------------------------------------|
| Структура страниц      | Главная, О департаменте, Услуги, Мониторинг, Экология, Новости (6 страниц), плюс карта сайта и страница 404 (не учитываются в общем количестве). |
| Интерактивные элементы | Баннеры, поиск, формы обратной связи, лента новостей. |
| Роли пользователей     | Гость (просмотр), пользователь (заявки), администратор (обновление). |
| Минимальное количество статей | Не менее 5 на каждую страницу. |
| Адаптивность           | Поддержка устройств с разрешением от 320px. |
| Стили оформления       | Стандартный стиль (цветовая схема по выбору) и стиль для слабовидящих (по ГОСТ Р 52872-2012 и WCAG 2.1). |
| Технологии             | HTML, CSS, минимальный JavaScript (без фреймворков ) Flask. CMS запрещены. |
| Репозиторий            | Публичный Git-репозиторий (Gitflic/GitHub). |
| Хостинг                | Размещение на бесплатном хостинге с предоставлением ссылки. |

## Требования к доступности для слабовидящих
### По ГОСТ Р 52872-2012
1. **Контрастность и читаемость**:
   - Минимальный уровень контрастности: 4.5:1 для текста, 3:1 для крупного текста (≥18pt или ≥14pt полужирный).
   - Рекомендуется сочетание темного текста (например, #000000) на светлом фоне (#FFFFFF) или светлого текста на темном фоне.
2. **Шрифты и типографика**:
   - Использовать sans-serif шрифты (например, Arial, Verdana, Open Sans) размером не менее 12pt (16px), с возможностью увеличения до 200% без потери структуры.
   - Избегать декоративных шрифтов.
3. **Цветовая схема**:
   - Цвет не должен быть единственным средством передачи информации.
   - Предоставить режим высокого контраста (например, черный текст на желтом фоне) с переключением через CSS.
4. **Навигация и управление**:
   - Полная навигация с клавиатуры (Tab, Enter, стрелки) с логической последовательностью табуляции.
   - Текстовые описания для всех интерактивных элементов для экранных ридеров.
5. **Альтернативные тексты и мультимедиа**:
   - Атрибут `alt` для всех изображений (например, `alt="Карта лесных пожаров за 2025 год"`).
   - Субтитры или транскрипция для аудио/видео (если применимо).
6. **Структура и разметка**:
   - Семантическая HTML (заголовки `<h1>`–`<h6>`, списки `<ul>`, `<ol>`, таблицы с `<th>` и `<td>`).
   - Запрет на автоматическое обновление контента без предупреждения и возможности отключения.

### По WCAG 2.1 (уровень AA)
- Устранение тайм-аутов в формах без предупреждения и продления.
- Текстовые сообщения об ошибках ввода с предложением исправления.
- Указание языка страницы атрибутом `lang` (например, `lang="ru"`).

### Адаптация для учебного проекта
- Ручная проверка контраста (например, WebAIM Contrast Checker).
- Реализация стиля для слабовидящих через переключатель стилей (CSS).

## Цели проекта
1. Обеспечить доступность информации о деятельности Департамента лесного хозяйства через сайт.
2. Реализовать функционал с авторизацией, интерактивными элементами и контентом (≥5 статей на страницу).
3. Обеспечить соответствие стандартам доступности (ГОСТ Р 52872-2012, WCAG 2.1).
4. Завершить разработку в установленные сроки с размещением на хостинге и в репозитории.

## Этапы выполнения проекта
### 1. Анализ и проектирование
- Провести анализ предметной области: определить продукт (сайт для информирования и услуг), границы (статический интерфейс для граждан, бизнеса, волонтеров, СМИ), помехи (ограниченный бюджет, низкая цифровая грамотность, ручное управление), цели (прозрачность, доступ к услугам, экологическая осведомленность), ожидаемые результаты (увеличение заявок, посещаемости, обращений).
- Определить целевую аудиторию: граждане, предприниматели, волонтеры, СМИ с разным уровнем цифровой грамотности.
- Провести анализ конкурентов (например, Рослесхоз, Тюменский департамент) и хороших примеров (Московский регион, Кемеровское лесное хозяйство).
- Спроектировать структуру сайта (6 страниц, см. таблицу характеристик).
- Разработать техническое задание по ГОСТ 34.602—2020.
- **Результат**: Структура сайта, аналитический отчет.

### 2. Разработка
- Настроить локальный сервер (XAMPP) на персональном компьютере.
- Создать публичный Git-репозиторий (Gitflic/GitHub) с регулярными коммитами.
- Разработать сайт:
  - Реализовать 6 страниц и интерактивные элементы (см. таблицу характеристик).
  - Создать два стиля: стандартный и для слабовидящих (по ГОСТ Р 52872-2012 и WCAG 2.1).
  - Разработать карту сайта и страницу 404 с перенаправлением.
- **Результат**: Функциональный сайт, исходный код в репозитории.

### 3. Контент и настройка
- Заполнить сайт контентом: ≥5 статей на страницу, с учетом категорий, навигации, расположения текста и изображений.
- Настроить интерактивные элементы (см. таблицу характеристик).
- Настроить учетные записи: создать минимум 2 пользователя (гость, пользователь, администратор), определить права доступа, разработать сценарий создания пользователя.
- Разместить сайт на бесплатном хостинге, предоставить ссылку.
- **Результат**: Заполненный сайт, размещенный на хостинге.

## Ограничения и требования
- CMS запрещены.
- Сроки: 01.05.2025–30.06.2025.
- Технологии: HTML, CSS, минимальный JavaScript (без фреймворков).
- Ссылка на хостинг обязательна.
- Работа должна вестись в публичном Git-репозитории.

## Дополнительные указания
- Ориентироваться на простоту и доступность для пользователей с разным уровнем цифровой грамотности.
- Учитывать учебный характер проекта: сложные серверные технологии и фреймворки (Django/Flask) не требуются.

- Все изменения в коде должны фиксироваться в репозитории с понятными коммитами.